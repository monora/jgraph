#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.jgraphl.graph.DirectedAdjacencyGraph<V>
	c201 [label=<<table title="org.jgraphl.graph.DirectedAdjacencyGraph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DirectedAdjacencyGraph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DirectedAdjacencyGraph&lt;V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DirectedAdjacencyGraph(adjListMap : Map&lt;V, Collection&lt;V&gt;&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./DirectedAdjacencyGraph.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.AbstractAdjacencyGraph<V>
	c202 [label=<<table title="org.jgraphl.graph.AbstractAdjacencyGraph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AbstractAdjacencyGraph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractAdjacencyGraph&lt;V&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractAdjacencyGraph() </td></tr>
<tr><td align="left" balign="left"> + noOfVertices() : long </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + forEachAdjacentVertex(v : V, action : Consumer&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + outEdges(u : V) : Stream&lt;Edge&lt;V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + forEachAdjacentEdge(u : V, action : Consumer&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + adjacentVertices(v : V) : Stream&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + contains(v : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsEdge(u : V, v : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsEdge(edge : Edge&lt;V&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./AbstractAdjacencyGraph.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.ImplicitGraph<V>
	c203 [label=<<table title="org.jgraphl.graph.ImplicitGraph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ImplicitGraph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ImplicitGraph&lt;V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ImplicitGraph(it : Supplier&lt;Stream&lt;V&gt;&gt;, neighborIterator : Function&lt;V, Stream&lt;V&gt;&gt;, isDirected : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDirected() : boolean </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + stream() : Stream&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + adjacentVertices(v : V) : Stream&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + builder() : ImplicitGraph.Builder&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ImplicitGraph.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.ImplicitGraph.Builder<W>
	c204 [label=<<table title="org.jgraphl.graph.ImplicitGraph.Builder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ImplicitGraph.Builder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Builder&lt;W&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + vertexIterator(vertexIterator : Supplier&lt;Stream&lt;W&gt;&gt;) : ImplicitGraph.Builder&lt;W&gt; </td></tr>
<tr><td align="left" balign="left"> + neighborIterator(neighborIterator : Function&lt;W, Stream&lt;W&gt;&gt;) : ImplicitGraph.Builder&lt;W&gt; </td></tr>
<tr><td align="left" balign="left"> + build() : Graph&lt;W&gt; </td></tr>
<tr><td align="left" balign="left"> + directed(b : boolean) : ImplicitGraph.Builder&lt;W&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ImplicitGraph.Builder.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.MutableDirectedAdjacencyGraph<V>
	c205 [label=<<table title="org.jgraphl.graph.MutableDirectedAdjacencyGraph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MutableDirectedAdjacencyGraph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MutableDirectedAdjacencyGraph&lt;V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MutableDirectedAdjacencyGraph(adjListMap : Map&lt;V, Collection&lt;V&gt;&gt;, adjListSupplier : Supplier&lt;Collection&lt;V&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + MutableDirectedAdjacencyGraph(adjListMap : Map&lt;V, Collection&lt;V&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + MutableDirectedAdjacencyGraph() </td></tr>
<tr><td align="left" balign="left"> + addVertex(v : V) : MutableDirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + addEdge(sourceVertex : V, targetVertex : V) : MutableDirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + removeVertex(v : V) : MutableDirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + removeEdge(sourceVertex : V, targetVertex : V) : MutableDirectedAdjacencyGraph&lt;V&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./MutableDirectedAdjacencyGraph.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.MutableUndirectedAdjacencyGraph<V>
	c206 [label=<<table title="org.jgraphl.graph.MutableUndirectedAdjacencyGraph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MutableUndirectedAdjacencyGraph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MutableUndirectedAdjacencyGraph&lt;V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MutableUndirectedAdjacencyGraph(adjListMap : Map&lt;V, Collection&lt;V&gt;&gt;, adjListSupplier : Supplier&lt;Collection&lt;V&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + MutableUndirectedAdjacencyGraph(adjListMap : Map&lt;V, Collection&lt;V&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + MutableUndirectedAdjacencyGraph() </td></tr>
<tr><td align="left" balign="left"> + addVertex(v : V) : MutableUndirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + addEdge(sourceVertex : V, targetVertex : V) : MutableUndirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + removeVertex(v : V) : MutableUndirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + removeEdge(sourceVertex : V, targetVertex : V) : MutableUndirectedAdjacencyGraph&lt;V&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./MutableUndirectedAdjacencyGraph.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.UndirectedAdjacencyGraph<V>
	c207 [label=<<table title="org.jgraphl.graph.UndirectedAdjacencyGraph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UndirectedAdjacencyGraph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UndirectedAdjacencyGraph&lt;V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UndirectedAdjacencyGraph(adjListMap : Map&lt;V, Collection&lt;V&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + containsEdge(u : V, v : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsEdge(edge : Edge&lt;V&gt;) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./UndirectedAdjacencyGraph.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.Graphs
	c208 [label=<<table title="org.jgraphl.graph.Graphs" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Graphs.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Graphs </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toDirectedAdjacenyGraph(graph : Graph&lt;V&gt;) : AbstractAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + toUndirectedAdjacencyGraph(other : Graph&lt;V&gt;) : UndirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + toMutableDirectedAdjacencyGraph(graph : Graph&lt;V&gt;) : MutableDirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + toMutableUndirectedAdjacencyGraph(other : Graph&lt;V&gt;) : MutableUndirectedAdjacencyGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + asDirectedAdjacencyGraph(a : V[]) : DirectedGraph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + asUndirectedAdjacencyGraph(a : T[]) : UndirectedAdjacencyGraph&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./Graphs.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.Graphs.Examples
	c209 [label=<<table title="org.jgraphl.graph.Graphs.Examples" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Graphs.Examples.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Examples </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Examples() </td></tr>
<tr><td align="left" balign="left"> + cycle(n : int) : Graph&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + complete(col : Collection&lt;V&gt;) : Graph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + partite(n : int, m : int) : MutableGraph&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./Graphs.Examples.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//org.jgraphl.graph.DirectedAdjacencyGraph<V> extends org.jgraphl.graph.AbstractAdjacencyGraph<V>
	c202:p -> c201:p [dir=back,arrowtail=empty];
	//org.jgraphl.graph.MutableDirectedAdjacencyGraph<V> extends org.jgraphl.graph.DirectedAdjacencyGraph<V>
	c201:p -> c205:p [dir=back,arrowtail=empty];
	//org.jgraphl.graph.MutableUndirectedAdjacencyGraph<V> extends org.jgraphl.graph.UndirectedAdjacencyGraph<V>
	c207:p -> c206:p [dir=back,arrowtail=empty];
	//org.jgraphl.graph.UndirectedAdjacencyGraph<V> extends org.jgraphl.graph.AbstractAdjacencyGraph<V>
	c202:p -> c207:p [dir=back,arrowtail=empty];
}

