#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.jgraphl.graph.traversal.TraversalIterator<V>
	c225 [label=<<table title="org.jgraphl.graph.traversal.TraversalIterator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TraversalIterator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> TraversalIterator&lt;V&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TraversalIterator(g : Graph&lt;V&gt;, v : V) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + hasNext() : boolean </font></td></tr>
<tr><td align="left" balign="left"> + getStartvertex() : V </td></tr>
<tr><td align="left" balign="left"> + next() : V </td></tr>
		</table></td></tr>
		</table>>, URL="./TraversalIterator.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.traversal.BfsIterator<V>
	c226 [label=<<table title="org.jgraphl.graph.traversal.BfsIterator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BfsIterator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BfsIterator&lt;V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BfsIterator(g : Graph&lt;V&gt;, v : V) </td></tr>
<tr><td align="left" balign="left"> + hasNext() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./BfsIterator.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.traversal.DfsIterator<V>
	c227 [label=<<table title="org.jgraphl.graph.traversal.DfsIterator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DfsIterator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DfsIterator&lt;V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DfsIterator(g : Graph&lt;V&gt;, v : V) </td></tr>
<tr><td align="left" balign="left"> + hasNext() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./DfsIterator.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.jgraphl.graph.traversal.GraphVisitor<V>
	c228 [label=<<table title="org.jgraphl.graph.traversal.GraphVisitor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GraphVisitor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> GraphVisitor&lt;V&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GraphVisitor(g : Graph&lt;V&gt;) </td></tr>
<tr><td align="left" balign="left"> + getGraph() : Graph&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + stream() : Stream&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + setExamineVertexListener(examineVertexListener : Consumer&lt;V&gt;) </td></tr>
<tr><td align="left" balign="left"> + setExamineEdgeListener(examineEdgeListener : BiConsumer&lt;V, V&gt;) </td></tr>
<tr><td align="left" balign="left"> + setTreeEdgeListener(examineEdgeListener : BiConsumer&lt;V, V&gt;) </td></tr>
<tr><td align="left" balign="left"> + setForwardEdgeListener(forwardEdgeListener : BiConsumer&lt;V, V&gt;) </td></tr>
<tr><td align="left" balign="left"> + setBackEdgeListener(backEdgeListener : BiConsumer&lt;V, V&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./GraphVisitor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//org.jgraphl.graph.traversal.TraversalIterator<V> extends org.jgraphl.graph.traversal.GraphVisitor<V>
	c228:p -> c225:p [dir=back,arrowtail=empty];
	//org.jgraphl.graph.traversal.BfsIterator<V> extends org.jgraphl.graph.traversal.TraversalIterator<V>
	c225:p -> c226:p [dir=back,arrowtail=empty];
	//org.jgraphl.graph.traversal.DfsIterator<V> extends org.jgraphl.graph.traversal.TraversalIterator<V>
	c225:p -> c227:p [dir=back,arrowtail=empty];
}

